
BareMetalDrivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000880  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a44  08000a4c  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a44  08000a44  00001a4c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a44  08000a44  00001a4c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a44  08000a4c  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a44  08000a44  00001a44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a48  08000a48  00001a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a4c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a4c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001a4c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a76  00000000  00000000  00001a7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002c9  00000000  00000000  000024f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000027c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008c  00000000  00000000  00002888  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000214e  00000000  00000000  00002914  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000110e  00000000  00000000  00004a62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009126  00000000  00000000  00005b70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000ec96  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0000ecdc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004d  00000000  00000000  0000ef64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000a2c 	.word	0x08000a2c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000a2c 	.word	0x08000a2c

08000204 <GPIO_PeriClockControl>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_PeriClockControl (GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	460b      	mov	r3, r1
 800020e:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 8000210:	78fb      	ldrb	r3, [r7, #3]
 8000212:	2b01      	cmp	r3, #1
 8000214:	d157      	bne.n	80002c6 <GPIO_PeriClockControl+0xc2>
    {
        if (pGPIOx == GPIOA)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a59      	ldr	r2, [pc, #356]	@ (8000380 <GPIO_PeriClockControl+0x17c>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeriClockControl+0x28>
        {
        	GPIOA_PCLK_EN();
 800021e:	4b59      	ldr	r3, [pc, #356]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000222:	4a58      	ldr	r2, [pc, #352]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000224:	f043 0301 	orr.w	r3, r3, #1
 8000228:	6313      	str	r3, [r2, #48]	@ 0x30
		else if (pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
    }
}
 800022a:	e0a3      	b.n	8000374 <GPIO_PeriClockControl+0x170>
        else if (pGPIOx == GPIOB)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a56      	ldr	r2, [pc, #344]	@ (8000388 <GPIO_PeriClockControl+0x184>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeriClockControl+0x3e>
        	GPIOB_PCLK_EN();
 8000234:	4b53      	ldr	r3, [pc, #332]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000238:	4a52      	ldr	r2, [pc, #328]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800023a:	f043 0302 	orr.w	r3, r3, #2
 800023e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000240:	e098      	b.n	8000374 <GPIO_PeriClockControl+0x170>
        else if (pGPIOx == GPIOC)
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a51      	ldr	r2, [pc, #324]	@ (800038c <GPIO_PeriClockControl+0x188>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PeriClockControl+0x54>
        	GPIOC_PCLK_EN();
 800024a:	4b4e      	ldr	r3, [pc, #312]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800024e:	4a4d      	ldr	r2, [pc, #308]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000250:	f043 0304 	orr.w	r3, r3, #4
 8000254:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000256:	e08d      	b.n	8000374 <GPIO_PeriClockControl+0x170>
        else if (pGPIOx == GPIOD)
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a4d      	ldr	r2, [pc, #308]	@ (8000390 <GPIO_PeriClockControl+0x18c>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d106      	bne.n	800026e <GPIO_PeriClockControl+0x6a>
        	GPIOD_PCLK_EN();
 8000260:	4b48      	ldr	r3, [pc, #288]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000264:	4a47      	ldr	r2, [pc, #284]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000266:	f043 0308 	orr.w	r3, r3, #8
 800026a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800026c:	e082      	b.n	8000374 <GPIO_PeriClockControl+0x170>
        else if (pGPIOx == GPIOE)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a48      	ldr	r2, [pc, #288]	@ (8000394 <GPIO_PeriClockControl+0x190>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d106      	bne.n	8000284 <GPIO_PeriClockControl+0x80>
        	GPIOE_PCLK_EN();
 8000276:	4b43      	ldr	r3, [pc, #268]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800027a:	4a42      	ldr	r2, [pc, #264]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800027c:	f043 0310 	orr.w	r3, r3, #16
 8000280:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000282:	e077      	b.n	8000374 <GPIO_PeriClockControl+0x170>
        else if (pGPIOx == GPIOF)
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a44      	ldr	r2, [pc, #272]	@ (8000398 <GPIO_PeriClockControl+0x194>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d106      	bne.n	800029a <GPIO_PeriClockControl+0x96>
        	GPIOF_PCLK_EN();
 800028c:	4b3d      	ldr	r3, [pc, #244]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000290:	4a3c      	ldr	r2, [pc, #240]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000292:	f043 0320 	orr.w	r3, r3, #32
 8000296:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000298:	e06c      	b.n	8000374 <GPIO_PeriClockControl+0x170>
        else if (pGPIOx == GPIOG)
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4a3f      	ldr	r2, [pc, #252]	@ (800039c <GPIO_PeriClockControl+0x198>)
 800029e:	4293      	cmp	r3, r2
 80002a0:	d106      	bne.n	80002b0 <GPIO_PeriClockControl+0xac>
        	GPIOG_PCLK_EN();
 80002a2:	4b38      	ldr	r3, [pc, #224]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002a6:	4a37      	ldr	r2, [pc, #220]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80002ac:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002ae:	e061      	b.n	8000374 <GPIO_PeriClockControl+0x170>
        else if (pGPIOx == GPIOH)
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a3b      	ldr	r2, [pc, #236]	@ (80003a0 <GPIO_PeriClockControl+0x19c>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d15d      	bne.n	8000374 <GPIO_PeriClockControl+0x170>
        	GPIOH_PCLK_EN();
 80002b8:	4b32      	ldr	r3, [pc, #200]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002bc:	4a31      	ldr	r2, [pc, #196]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002be:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80002c2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002c4:	e056      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		if (pGPIOx == GPIOA)
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a2d      	ldr	r2, [pc, #180]	@ (8000380 <GPIO_PeriClockControl+0x17c>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 80002ce:	4b2d      	ldr	r3, [pc, #180]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002d2:	4a2c      	ldr	r2, [pc, #176]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002d4:	f023 0301 	bic.w	r3, r3, #1
 80002d8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002da:	e04b      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOB)
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a2a      	ldr	r2, [pc, #168]	@ (8000388 <GPIO_PeriClockControl+0x184>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80002e4:	4b27      	ldr	r3, [pc, #156]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e8:	4a26      	ldr	r2, [pc, #152]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002ea:	f023 0302 	bic.w	r3, r3, #2
 80002ee:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002f0:	e040      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOC)
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a25      	ldr	r2, [pc, #148]	@ (800038c <GPIO_PeriClockControl+0x188>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80002fa:	4b22      	ldr	r3, [pc, #136]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002fe:	4a21      	ldr	r2, [pc, #132]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000300:	f023 0304 	bic.w	r3, r3, #4
 8000304:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000306:	e035      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOD)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a21      	ldr	r2, [pc, #132]	@ (8000390 <GPIO_PeriClockControl+0x18c>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000310:	4b1c      	ldr	r3, [pc, #112]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000314:	4a1b      	ldr	r2, [pc, #108]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000316:	f023 0308 	bic.w	r3, r3, #8
 800031a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800031c:	e02a      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOE)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1c      	ldr	r2, [pc, #112]	@ (8000394 <GPIO_PeriClockControl+0x190>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 8000326:	4b17      	ldr	r3, [pc, #92]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800032a:	4a16      	ldr	r2, [pc, #88]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800032c:	f023 0310 	bic.w	r3, r3, #16
 8000330:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000332:	e01f      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOF)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a18      	ldr	r2, [pc, #96]	@ (8000398 <GPIO_PeriClockControl+0x194>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 800033c:	4b11      	ldr	r3, [pc, #68]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000340:	4a10      	ldr	r2, [pc, #64]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000342:	f023 0320 	bic.w	r3, r3, #32
 8000346:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000348:	e014      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOG)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a13      	ldr	r2, [pc, #76]	@ (800039c <GPIO_PeriClockControl+0x198>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000352:	4b0c      	ldr	r3, [pc, #48]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000356:	4a0b      	ldr	r2, [pc, #44]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 8000358:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800035c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800035e:	e009      	b.n	8000374 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOH)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a0f      	ldr	r2, [pc, #60]	@ (80003a0 <GPIO_PeriClockControl+0x19c>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d105      	bne.n	8000374 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000368:	4b06      	ldr	r3, [pc, #24]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036c:	4a05      	ldr	r2, [pc, #20]	@ (8000384 <GPIO_PeriClockControl+0x180>)
 800036e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000372:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000374:	bf00      	nop
 8000376:	370c      	adds	r7, #12
 8000378:	46bd      	mov	sp, r7
 800037a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037e:	4770      	bx	lr
 8000380:	40020000 	.word	0x40020000
 8000384:	40023800 	.word	0x40023800
 8000388:	40020400 	.word	0x40020400
 800038c:	40020800 	.word	0x40020800
 8000390:	40020c00 	.word	0x40020c00
 8000394:	40021000 	.word	0x40021000
 8000398:	40021400 	.word	0x40021400
 800039c:	40021800 	.word	0x40021800
 80003a0:	40021c00 	.word	0x40021c00

080003a4 <GPIO_Init>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_Init (GPIO_Handle_t *pGPIOHandle)
{
 80003a4:	b580      	push	{r7, lr}
 80003a6:	b086      	sub	sp, #24
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; //temp. register
 80003ac:	2300      	movs	r3, #0
 80003ae:	617b      	str	r3, [r7, #20]
	uint8_t temp1 = 0;
 80003b0:	2300      	movs	r3, #0
 80003b2:	74fb      	strb	r3, [r7, #19]
	uint8_t temp2 = 0;
 80003b4:	2300      	movs	r3, #0
 80003b6:	74bb      	strb	r3, [r7, #18]
	uint8_t portcode = 0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	747b      	strb	r3, [r7, #17]

	/* Enable the peripheral clock */
	GPIO_PeriClockControl((pGPIOHandle->pGPIOx), ENABLE);
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	2101      	movs	r1, #1
 80003c2:	4618      	mov	r0, r3
 80003c4:	f7ff ff1e 	bl	8000204 <GPIO_PeriClockControl>
	/* configure the mode of gpio pin*/
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	795b      	ldrb	r3, [r3, #5]
 80003cc:	2b03      	cmp	r3, #3
 80003ce:	d81f      	bhi.n	8000410 <GPIO_Init+0x6c>
    {
		/* The non interrupt mode */
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	461a      	mov	r2, r3
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	791b      	ldrb	r3, [r3, #4]
 80003da:	005b      	lsls	r3, r3, #1
 80003dc:	fa02 f303 	lsl.w	r3, r2, r3
 80003e0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); /* clearing bits before setting it*/
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	681a      	ldr	r2, [r3, #0]
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	791b      	ldrb	r3, [r3, #4]
 80003ec:	4619      	mov	r1, r3
 80003ee:	2303      	movs	r3, #3
 80003f0:	408b      	lsls	r3, r1
 80003f2:	43db      	mvns	r3, r3
 80003f4:	4619      	mov	r1, r3
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	400a      	ands	r2, r1
 80003fc:	601a      	str	r2, [r3, #0]
      	pGPIOHandle->pGPIOx->MODER |= temp; /* setting the bit*/
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	6819      	ldr	r1, [r3, #0]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	697a      	ldr	r2, [r7, #20]
 800040a:	430a      	orrs	r2, r1
 800040c:	601a      	str	r2, [r3, #0]
 800040e:	e0c2      	b.n	8000596 <GPIO_Init+0x1f2>
    }
	else
    {

		/* The interrupt mode */
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	795b      	ldrb	r3, [r3, #5]
 8000414:	2b04      	cmp	r3, #4
 8000416:	d117      	bne.n	8000448 <GPIO_Init+0xa4>
		{
			/* Configure the FTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000418:	4b47      	ldr	r3, [pc, #284]	@ (8000538 <GPIO_Init+0x194>)
 800041a:	68db      	ldr	r3, [r3, #12]
 800041c:	687a      	ldr	r2, [r7, #4]
 800041e:	7912      	ldrb	r2, [r2, #4]
 8000420:	4611      	mov	r1, r2
 8000422:	2201      	movs	r2, #1
 8000424:	408a      	lsls	r2, r1
 8000426:	4611      	mov	r1, r2
 8000428:	4a43      	ldr	r2, [pc, #268]	@ (8000538 <GPIO_Init+0x194>)
 800042a:	430b      	orrs	r3, r1
 800042c:	60d3      	str	r3, [r2, #12]
			/* Clear the coresponding RTSR bit*/
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042e:	4b42      	ldr	r3, [pc, #264]	@ (8000538 <GPIO_Init+0x194>)
 8000430:	689b      	ldr	r3, [r3, #8]
 8000432:	687a      	ldr	r2, [r7, #4]
 8000434:	7912      	ldrb	r2, [r2, #4]
 8000436:	4611      	mov	r1, r2
 8000438:	2201      	movs	r2, #1
 800043a:	408a      	lsls	r2, r1
 800043c:	43d2      	mvns	r2, r2
 800043e:	4611      	mov	r1, r2
 8000440:	4a3d      	ldr	r2, [pc, #244]	@ (8000538 <GPIO_Init+0x194>)
 8000442:	400b      	ands	r3, r1
 8000444:	6093      	str	r3, [r2, #8]
 8000446:	e035      	b.n	80004b4 <GPIO_Init+0x110>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	795b      	ldrb	r3, [r3, #5]
 800044c:	2b05      	cmp	r3, #5
 800044e:	d117      	bne.n	8000480 <GPIO_Init+0xdc>
		{
			/* Configure the RTSR */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000450:	4b39      	ldr	r3, [pc, #228]	@ (8000538 <GPIO_Init+0x194>)
 8000452:	689b      	ldr	r3, [r3, #8]
 8000454:	687a      	ldr	r2, [r7, #4]
 8000456:	7912      	ldrb	r2, [r2, #4]
 8000458:	4611      	mov	r1, r2
 800045a:	2201      	movs	r2, #1
 800045c:	408a      	lsls	r2, r1
 800045e:	4611      	mov	r1, r2
 8000460:	4a35      	ldr	r2, [pc, #212]	@ (8000538 <GPIO_Init+0x194>)
 8000462:	430b      	orrs	r3, r1
 8000464:	6093      	str	r3, [r2, #8]
			/* Clear the coresponding RTSR bit*/
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000466:	4b34      	ldr	r3, [pc, #208]	@ (8000538 <GPIO_Init+0x194>)
 8000468:	68db      	ldr	r3, [r3, #12]
 800046a:	687a      	ldr	r2, [r7, #4]
 800046c:	7912      	ldrb	r2, [r2, #4]
 800046e:	4611      	mov	r1, r2
 8000470:	2201      	movs	r2, #1
 8000472:	408a      	lsls	r2, r1
 8000474:	43d2      	mvns	r2, r2
 8000476:	4611      	mov	r1, r2
 8000478:	4a2f      	ldr	r2, [pc, #188]	@ (8000538 <GPIO_Init+0x194>)
 800047a:	400b      	ands	r3, r1
 800047c:	60d3      	str	r3, [r2, #12]
 800047e:	e019      	b.n	80004b4 <GPIO_Init+0x110>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	795b      	ldrb	r3, [r3, #5]
 8000484:	2b06      	cmp	r3, #6
 8000486:	d115      	bne.n	80004b4 <GPIO_Init+0x110>
		{
			/* Configure both RFSR and RTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000488:	4b2b      	ldr	r3, [pc, #172]	@ (8000538 <GPIO_Init+0x194>)
 800048a:	68db      	ldr	r3, [r3, #12]
 800048c:	687a      	ldr	r2, [r7, #4]
 800048e:	7912      	ldrb	r2, [r2, #4]
 8000490:	4611      	mov	r1, r2
 8000492:	2201      	movs	r2, #1
 8000494:	408a      	lsls	r2, r1
 8000496:	4611      	mov	r1, r2
 8000498:	4a27      	ldr	r2, [pc, #156]	@ (8000538 <GPIO_Init+0x194>)
 800049a:	430b      	orrs	r3, r1
 800049c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800049e:	4b26      	ldr	r3, [pc, #152]	@ (8000538 <GPIO_Init+0x194>)
 80004a0:	689b      	ldr	r3, [r3, #8]
 80004a2:	687a      	ldr	r2, [r7, #4]
 80004a4:	7912      	ldrb	r2, [r2, #4]
 80004a6:	4611      	mov	r1, r2
 80004a8:	2201      	movs	r2, #1
 80004aa:	408a      	lsls	r2, r1
 80004ac:	4611      	mov	r1, r2
 80004ae:	4a22      	ldr	r2, [pc, #136]	@ (8000538 <GPIO_Init+0x194>)
 80004b0:	430b      	orrs	r3, r1
 80004b2:	6093      	str	r3, [r2, #8]
		}
		/* configure the GPIO port selection in SYSCFG_EXTICR */
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	791b      	ldrb	r3, [r3, #4]
 80004b8:	089b      	lsrs	r3, r3, #2
 80004ba:	74fb      	strb	r3, [r7, #19]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	f003 0303 	and.w	r3, r3, #3
 80004c4:	74bb      	strb	r3, [r7, #18]
		portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	4a1c      	ldr	r2, [pc, #112]	@ (800053c <GPIO_Init+0x198>)
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d045      	beq.n	800055c <GPIO_Init+0x1b8>
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a1a      	ldr	r2, [pc, #104]	@ (8000540 <GPIO_Init+0x19c>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d02b      	beq.n	8000532 <GPIO_Init+0x18e>
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	4a19      	ldr	r2, [pc, #100]	@ (8000544 <GPIO_Init+0x1a0>)
 80004e0:	4293      	cmp	r3, r2
 80004e2:	d024      	beq.n	800052e <GPIO_Init+0x18a>
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a17      	ldr	r2, [pc, #92]	@ (8000548 <GPIO_Init+0x1a4>)
 80004ea:	4293      	cmp	r3, r2
 80004ec:	d01d      	beq.n	800052a <GPIO_Init+0x186>
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	4a16      	ldr	r2, [pc, #88]	@ (800054c <GPIO_Init+0x1a8>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d016      	beq.n	8000526 <GPIO_Init+0x182>
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4a14      	ldr	r2, [pc, #80]	@ (8000550 <GPIO_Init+0x1ac>)
 80004fe:	4293      	cmp	r3, r2
 8000500:	d00f      	beq.n	8000522 <GPIO_Init+0x17e>
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	4a13      	ldr	r2, [pc, #76]	@ (8000554 <GPIO_Init+0x1b0>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d008      	beq.n	800051e <GPIO_Init+0x17a>
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	4a11      	ldr	r2, [pc, #68]	@ (8000558 <GPIO_Init+0x1b4>)
 8000512:	4293      	cmp	r3, r2
 8000514:	d101      	bne.n	800051a <GPIO_Init+0x176>
 8000516:	2307      	movs	r3, #7
 8000518:	e021      	b.n	800055e <GPIO_Init+0x1ba>
 800051a:	2300      	movs	r3, #0
 800051c:	e01f      	b.n	800055e <GPIO_Init+0x1ba>
 800051e:	2306      	movs	r3, #6
 8000520:	e01d      	b.n	800055e <GPIO_Init+0x1ba>
 8000522:	2305      	movs	r3, #5
 8000524:	e01b      	b.n	800055e <GPIO_Init+0x1ba>
 8000526:	2304      	movs	r3, #4
 8000528:	e019      	b.n	800055e <GPIO_Init+0x1ba>
 800052a:	2303      	movs	r3, #3
 800052c:	e017      	b.n	800055e <GPIO_Init+0x1ba>
 800052e:	2302      	movs	r3, #2
 8000530:	e015      	b.n	800055e <GPIO_Init+0x1ba>
 8000532:	2301      	movs	r3, #1
 8000534:	e013      	b.n	800055e <GPIO_Init+0x1ba>
 8000536:	bf00      	nop
 8000538:	40013c00 	.word	0x40013c00
 800053c:	40020000 	.word	0x40020000
 8000540:	40020400 	.word	0x40020400
 8000544:	40020800 	.word	0x40020800
 8000548:	40020c00 	.word	0x40020c00
 800054c:	40021000 	.word	0x40021000
 8000550:	40021400 	.word	0x40021400
 8000554:	40021800 	.word	0x40021800
 8000558:	40021c00 	.word	0x40021c00
 800055c:	2300      	movs	r3, #0
 800055e:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000560:	4b5b      	ldr	r3, [pc, #364]	@ (80006d0 <GPIO_Init+0x32c>)
 8000562:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000564:	4a5a      	ldr	r2, [pc, #360]	@ (80006d0 <GPIO_Init+0x32c>)
 8000566:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800056a:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << temp2 * 4;
 800056c:	7c7a      	ldrb	r2, [r7, #17]
 800056e:	7cbb      	ldrb	r3, [r7, #18]
 8000570:	009b      	lsls	r3, r3, #2
 8000572:	fa02 f103 	lsl.w	r1, r2, r3
 8000576:	4a57      	ldr	r2, [pc, #348]	@ (80006d4 <GPIO_Init+0x330>)
 8000578:	7cfb      	ldrb	r3, [r7, #19]
 800057a:	3302      	adds	r3, #2
 800057c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		/* enable the exti interrupt delivery using IMR */
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000580:	4b55      	ldr	r3, [pc, #340]	@ (80006d8 <GPIO_Init+0x334>)
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7912      	ldrb	r2, [r2, #4]
 8000588:	4611      	mov	r1, r2
 800058a:	2201      	movs	r2, #1
 800058c:	408a      	lsls	r2, r1
 800058e:	4611      	mov	r1, r2
 8000590:	4a51      	ldr	r2, [pc, #324]	@ (80006d8 <GPIO_Init+0x334>)
 8000592:	430b      	orrs	r3, r1
 8000594:	6013      	str	r3, [r2, #0]
    }
	/* configure the speed*/
	temp = 0;
 8000596:	2300      	movs	r3, #0
 8000598:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	799b      	ldrb	r3, [r3, #6]
 800059e:	461a      	mov	r2, r3
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	791b      	ldrb	r3, [r3, #4]
 80005a4:	005b      	lsls	r3, r3, #1
 80005a6:	fa02 f303 	lsl.w	r3, r2, r3
 80005aa:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	689a      	ldr	r2, [r3, #8]
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	791b      	ldrb	r3, [r3, #4]
 80005b6:	4619      	mov	r1, r3
 80005b8:	2303      	movs	r3, #3
 80005ba:	408b      	lsls	r3, r1
 80005bc:	43db      	mvns	r3, r3
 80005be:	4619      	mov	r1, r3
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	400a      	ands	r2, r1
 80005c6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	6899      	ldr	r1, [r3, #8]
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	697a      	ldr	r2, [r7, #20]
 80005d4:	430a      	orrs	r2, r1
 80005d6:	609a      	str	r2, [r3, #8]
	/* configure the pupd settings*/
	temp = 0;
 80005d8:	2300      	movs	r3, #0
 80005da:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	79db      	ldrb	r3, [r3, #7]
 80005e0:	461a      	mov	r2, r3
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	791b      	ldrb	r3, [r3, #4]
 80005e6:	005b      	lsls	r3, r3, #1
 80005e8:	fa02 f303 	lsl.w	r3, r2, r3
 80005ec:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	68da      	ldr	r2, [r3, #12]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	791b      	ldrb	r3, [r3, #4]
 80005f8:	4619      	mov	r1, r3
 80005fa:	2303      	movs	r3, #3
 80005fc:	408b      	lsls	r3, r1
 80005fe:	43db      	mvns	r3, r3
 8000600:	4619      	mov	r1, r3
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	400a      	ands	r2, r1
 8000608:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	68d9      	ldr	r1, [r3, #12]
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	697a      	ldr	r2, [r7, #20]
 8000616:	430a      	orrs	r2, r1
 8000618:	60da      	str	r2, [r3, #12]
	/* configure the optype*/ //TODO: configure only in output mode
	temp = 0;
 800061a:	2300      	movs	r3, #0
 800061c:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	7a1b      	ldrb	r3, [r3, #8]
 8000622:	461a      	mov	r2, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	791b      	ldrb	r3, [r3, #4]
 8000628:	005b      	lsls	r3, r3, #1
 800062a:	fa02 f303 	lsl.w	r3, r2, r3
 800062e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	685a      	ldr	r2, [r3, #4]
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	791b      	ldrb	r3, [r3, #4]
 800063a:	4619      	mov	r1, r3
 800063c:	2303      	movs	r3, #3
 800063e:	408b      	lsls	r3, r1
 8000640:	43db      	mvns	r3, r3
 8000642:	4619      	mov	r1, r3
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	400a      	ands	r2, r1
 800064a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	6859      	ldr	r1, [r3, #4]
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	697a      	ldr	r2, [r7, #20]
 8000658:	430a      	orrs	r2, r1
 800065a:	605a      	str	r2, [r3, #4]
	/* configure the alt functionality*/
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	795b      	ldrb	r3, [r3, #5]
 8000660:	2b02      	cmp	r3, #2
 8000662:	d131      	bne.n	80006c8 <GPIO_Init+0x324>
    {
		uint8_t temp1;
		uint8_t temp2;
		/* selecting the register AFR[0] (AFRL) or AFR[1] (AFRH) */
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	791b      	ldrb	r3, [r3, #4]
 8000668:	08db      	lsrs	r3, r3, #3
 800066a:	743b      	strb	r3, [r7, #16]
		/* selecting the bit position*/
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	791b      	ldrb	r3, [r3, #4]
 8000670:	f003 0307 	and.w	r3, r3, #7
 8000674:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	681b      	ldr	r3, [r3, #0]
 800067a:	7c3a      	ldrb	r2, [r7, #16]
 800067c:	3208      	adds	r2, #8
 800067e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000682:	7bfb      	ldrb	r3, [r7, #15]
 8000684:	009b      	lsls	r3, r3, #2
 8000686:	220f      	movs	r2, #15
 8000688:	fa02 f303 	lsl.w	r3, r2, r3
 800068c:	43db      	mvns	r3, r3
 800068e:	4618      	mov	r0, r3
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	7c3a      	ldrb	r2, [r7, #16]
 8000696:	4001      	ands	r1, r0
 8000698:	3208      	adds	r2, #8
 800069a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	681b      	ldr	r3, [r3, #0]
 80006a2:	7c3a      	ldrb	r2, [r7, #16]
 80006a4:	3208      	adds	r2, #8
 80006a6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	7a5b      	ldrb	r3, [r3, #9]
 80006ae:	461a      	mov	r2, r3
 80006b0:	7bfb      	ldrb	r3, [r7, #15]
 80006b2:	009b      	lsls	r3, r3, #2
 80006b4:	fa02 f303 	lsl.w	r3, r2, r3
 80006b8:	4618      	mov	r0, r3
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	7c3a      	ldrb	r2, [r7, #16]
 80006c0:	4301      	orrs	r1, r0
 80006c2:	3208      	adds	r2, #8
 80006c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }
}
 80006c8:	bf00      	nop
 80006ca:	3718      	adds	r7, #24
 80006cc:	46bd      	mov	sp, r7
 80006ce:	bd80      	pop	{r7, pc}
 80006d0:	40023800 	.word	0x40023800
 80006d4:	40013800 	.word	0x40013800
 80006d8:	40013c00 	.word	0x40013c00

080006dc <GPIO_ToggleOutputPin>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_ToggleOutputPin (GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006dc:	b480      	push	{r7}
 80006de:	b083      	sub	sp, #12
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	6078      	str	r0, [r7, #4]
 80006e4:	460b      	mov	r3, r1
 80006e6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	695b      	ldr	r3, [r3, #20]
 80006ec:	78fa      	ldrb	r2, [r7, #3]
 80006ee:	2101      	movs	r1, #1
 80006f0:	fa01 f202 	lsl.w	r2, r1, r2
 80006f4:	405a      	eors	r2, r3
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	615a      	str	r2, [r3, #20]
}
 80006fa:	bf00      	nop
 80006fc:	370c      	adds	r7, #12
 80006fe:	46bd      	mov	sp, r7
 8000700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000704:	4770      	bx	lr
	...

08000708 <GPIO_IRQInterruptConfig>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_IRQInterruptConfig (uint8_t IRQNumber, uint8_t EnorDi)
{
 8000708:	b480      	push	{r7}
 800070a:	b083      	sub	sp, #12
 800070c:	af00      	add	r7, sp, #0
 800070e:	4603      	mov	r3, r0
 8000710:	460a      	mov	r2, r1
 8000712:	71fb      	strb	r3, [r7, #7]
 8000714:	4613      	mov	r3, r2
 8000716:	71bb      	strb	r3, [r7, #6]
	/* processor side NVIC*/
	if (EnorDi == ENABLE)
 8000718:	79bb      	ldrb	r3, [r7, #6]
 800071a:	2b01      	cmp	r3, #1
 800071c:	d133      	bne.n	8000786 <GPIO_IRQInterruptConfig+0x7e>
    {
		if (IRQNumber <= 31)
 800071e:	79fb      	ldrb	r3, [r7, #7]
 8000720:	2b1f      	cmp	r3, #31
 8000722:	d80a      	bhi.n	800073a <GPIO_IRQInterruptConfig+0x32>
		{
			/* program ISER0 register */
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000724:	4b35      	ldr	r3, [pc, #212]	@ (80007fc <GPIO_IRQInterruptConfig+0xf4>)
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	79fa      	ldrb	r2, [r7, #7]
 800072a:	2101      	movs	r1, #1
 800072c:	fa01 f202 	lsl.w	r2, r1, r2
 8000730:	4611      	mov	r1, r2
 8000732:	4a32      	ldr	r2, [pc, #200]	@ (80007fc <GPIO_IRQInterruptConfig+0xf4>)
 8000734:	430b      	orrs	r3, r1
 8000736:	6013      	str	r3, [r2, #0]
		{
			/* program ICER2 register */
			*NVIC_ICER2 |= (1 << IRQNumber % 64);
		}
    }
}
 8000738:	e059      	b.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
		else if ((IRQNumber > 31) && (IRQNumber < 64))
 800073a:	79fb      	ldrb	r3, [r7, #7]
 800073c:	2b1f      	cmp	r3, #31
 800073e:	d90f      	bls.n	8000760 <GPIO_IRQInterruptConfig+0x58>
 8000740:	79fb      	ldrb	r3, [r7, #7]
 8000742:	2b3f      	cmp	r3, #63	@ 0x3f
 8000744:	d80c      	bhi.n	8000760 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << IRQNumber % 32);
 8000746:	4b2e      	ldr	r3, [pc, #184]	@ (8000800 <GPIO_IRQInterruptConfig+0xf8>)
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	79fa      	ldrb	r2, [r7, #7]
 800074c:	f002 021f 	and.w	r2, r2, #31
 8000750:	2101      	movs	r1, #1
 8000752:	fa01 f202 	lsl.w	r2, r1, r2
 8000756:	4611      	mov	r1, r2
 8000758:	4a29      	ldr	r2, [pc, #164]	@ (8000800 <GPIO_IRQInterruptConfig+0xf8>)
 800075a:	430b      	orrs	r3, r1
 800075c:	6013      	str	r3, [r2, #0]
 800075e:	e046      	b.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
		else if ((IRQNumber >= 64) && (IRQNumber < 96))
 8000760:	79fb      	ldrb	r3, [r7, #7]
 8000762:	2b3f      	cmp	r3, #63	@ 0x3f
 8000764:	d943      	bls.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
 8000766:	79fb      	ldrb	r3, [r7, #7]
 8000768:	2b5f      	cmp	r3, #95	@ 0x5f
 800076a:	d840      	bhi.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << IRQNumber % 64);
 800076c:	4b25      	ldr	r3, [pc, #148]	@ (8000804 <GPIO_IRQInterruptConfig+0xfc>)
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	79fa      	ldrb	r2, [r7, #7]
 8000772:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000776:	2101      	movs	r1, #1
 8000778:	fa01 f202 	lsl.w	r2, r1, r2
 800077c:	4611      	mov	r1, r2
 800077e:	4a21      	ldr	r2, [pc, #132]	@ (8000804 <GPIO_IRQInterruptConfig+0xfc>)
 8000780:	430b      	orrs	r3, r1
 8000782:	6013      	str	r3, [r2, #0]
}
 8000784:	e033      	b.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
		if (IRQNumber <= 31)
 8000786:	79fb      	ldrb	r3, [r7, #7]
 8000788:	2b1f      	cmp	r3, #31
 800078a:	d80a      	bhi.n	80007a2 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 800078c:	4b1e      	ldr	r3, [pc, #120]	@ (8000808 <GPIO_IRQInterruptConfig+0x100>)
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	79fa      	ldrb	r2, [r7, #7]
 8000792:	2101      	movs	r1, #1
 8000794:	fa01 f202 	lsl.w	r2, r1, r2
 8000798:	4611      	mov	r1, r2
 800079a:	4a1b      	ldr	r2, [pc, #108]	@ (8000808 <GPIO_IRQInterruptConfig+0x100>)
 800079c:	430b      	orrs	r3, r1
 800079e:	6013      	str	r3, [r2, #0]
}
 80007a0:	e025      	b.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
		else if ((IRQNumber > 31) && (IRQNumber < 64))
 80007a2:	79fb      	ldrb	r3, [r7, #7]
 80007a4:	2b1f      	cmp	r3, #31
 80007a6:	d90f      	bls.n	80007c8 <GPIO_IRQInterruptConfig+0xc0>
 80007a8:	79fb      	ldrb	r3, [r7, #7]
 80007aa:	2b3f      	cmp	r3, #63	@ 0x3f
 80007ac:	d80c      	bhi.n	80007c8 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << IRQNumber % 32);
 80007ae:	4b17      	ldr	r3, [pc, #92]	@ (800080c <GPIO_IRQInterruptConfig+0x104>)
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	79fa      	ldrb	r2, [r7, #7]
 80007b4:	f002 021f 	and.w	r2, r2, #31
 80007b8:	2101      	movs	r1, #1
 80007ba:	fa01 f202 	lsl.w	r2, r1, r2
 80007be:	4611      	mov	r1, r2
 80007c0:	4a12      	ldr	r2, [pc, #72]	@ (800080c <GPIO_IRQInterruptConfig+0x104>)
 80007c2:	430b      	orrs	r3, r1
 80007c4:	6013      	str	r3, [r2, #0]
 80007c6:	e012      	b.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
		else if ((IRQNumber >= 64) && (IRQNumber < 96))
 80007c8:	79fb      	ldrb	r3, [r7, #7]
 80007ca:	2b3f      	cmp	r3, #63	@ 0x3f
 80007cc:	d90f      	bls.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
 80007ce:	79fb      	ldrb	r3, [r7, #7]
 80007d0:	2b5f      	cmp	r3, #95	@ 0x5f
 80007d2:	d80c      	bhi.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << IRQNumber % 64);
 80007d4:	4b0e      	ldr	r3, [pc, #56]	@ (8000810 <GPIO_IRQInterruptConfig+0x108>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	79fa      	ldrb	r2, [r7, #7]
 80007da:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80007de:	2101      	movs	r1, #1
 80007e0:	fa01 f202 	lsl.w	r2, r1, r2
 80007e4:	4611      	mov	r1, r2
 80007e6:	4a0a      	ldr	r2, [pc, #40]	@ (8000810 <GPIO_IRQInterruptConfig+0x108>)
 80007e8:	430b      	orrs	r3, r1
 80007ea:	6013      	str	r3, [r2, #0]
}
 80007ec:	e7ff      	b.n	80007ee <GPIO_IRQInterruptConfig+0xe6>
 80007ee:	bf00      	nop
 80007f0:	370c      	adds	r7, #12
 80007f2:	46bd      	mov	sp, r7
 80007f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007f8:	4770      	bx	lr
 80007fa:	bf00      	nop
 80007fc:	e000e100 	.word	0xe000e100
 8000800:	e000e104 	.word	0xe000e104
 8000804:	e000e108 	.word	0xe000e108
 8000808:	e000e180 	.word	0xe000e180
 800080c:	e000e184 	.word	0xe000e184
 8000810:	e000e188 	.word	0xe000e188

08000814 <GPIO_IRQPriorityConfig>:
 * @return 						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_IRQPriorityConfig (uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000814:	b480      	push	{r7}
 8000816:	b085      	sub	sp, #20
 8000818:	af00      	add	r7, sp, #0
 800081a:	4603      	mov	r3, r0
 800081c:	6039      	str	r1, [r7, #0]
 800081e:	71fb      	strb	r3, [r7, #7]
	/* find out the ipr register */
	uint8_t iprx = IRQNumber / 4;
 8000820:	79fb      	ldrb	r3, [r7, #7]
 8000822:	089b      	lsrs	r3, r3, #2
 8000824:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000826:	79fb      	ldrb	r3, [r7, #7]
 8000828:	f003 0303 	and.w	r3, r3, #3
 800082c:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 800082e:	7bbb      	ldrb	r3, [r7, #14]
 8000830:	00db      	lsls	r3, r3, #3
 8000832:	b2db      	uxtb	r3, r3
 8000834:	3304      	adds	r3, #4
 8000836:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000838:	7bfb      	ldrb	r3, [r7, #15]
 800083a:	009b      	lsls	r3, r3, #2
 800083c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000840:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000844:	6819      	ldr	r1, [r3, #0]
 8000846:	7b7b      	ldrb	r3, [r7, #13]
 8000848:	683a      	ldr	r2, [r7, #0]
 800084a:	409a      	lsls	r2, r3
 800084c:	7bfb      	ldrb	r3, [r7, #15]
 800084e:	009b      	lsls	r3, r3, #2
 8000850:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000854:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000858:	430a      	orrs	r2, r1
 800085a:	601a      	str	r2, [r3, #0]
}
 800085c:	bf00      	nop
 800085e:	3714      	adds	r7, #20
 8000860:	46bd      	mov	sp, r7
 8000862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000866:	4770      	bx	lr

08000868 <GPIO_IRQHandling>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_IRQHandling (uint8_t PinNumber)
{
 8000868:	b480      	push	{r7}
 800086a:	b083      	sub	sp, #12
 800086c:	af00      	add	r7, sp, #0
 800086e:	4603      	mov	r3, r0
 8000870:	71fb      	strb	r3, [r7, #7]
	/* Clear the EXTI PR register corresponding to the pin number */
	if ( EXTI->PR & (1 << PinNumber))
 8000872:	4b0c      	ldr	r3, [pc, #48]	@ (80008a4 <GPIO_IRQHandling+0x3c>)
 8000874:	695b      	ldr	r3, [r3, #20]
 8000876:	79fa      	ldrb	r2, [r7, #7]
 8000878:	2101      	movs	r1, #1
 800087a:	fa01 f202 	lsl.w	r2, r1, r2
 800087e:	4013      	ands	r3, r2
 8000880:	2b00      	cmp	r3, #0
 8000882:	d009      	beq.n	8000898 <GPIO_IRQHandling+0x30>
    {
		/* clear */
		EXTI->PR |= (1 << PinNumber);
 8000884:	4b07      	ldr	r3, [pc, #28]	@ (80008a4 <GPIO_IRQHandling+0x3c>)
 8000886:	695b      	ldr	r3, [r3, #20]
 8000888:	79fa      	ldrb	r2, [r7, #7]
 800088a:	2101      	movs	r1, #1
 800088c:	fa01 f202 	lsl.w	r2, r1, r2
 8000890:	4611      	mov	r1, r2
 8000892:	4a04      	ldr	r2, [pc, #16]	@ (80008a4 <GPIO_IRQHandling+0x3c>)
 8000894:	430b      	orrs	r3, r1
 8000896:	6153      	str	r3, [r2, #20]
    }
}
 8000898:	bf00      	nop
 800089a:	370c      	adds	r7, #12
 800089c:	46bd      	mov	sp, r7
 800089e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a2:	4770      	bx	lr
 80008a4:	40013c00 	.word	0x40013c00

080008a8 <main>:
/*************************************************************************************************************************************************/



int main(void)
{
 80008a8:	b580      	push	{r7, lr}
 80008aa:	b086      	sub	sp, #24
 80008ac:	af00      	add	r7, sp, #0
	/* This section is allocated for testing the driver functionality using interrupt mode. */
	GPIO_Handle_t GpioLed;
	GPIO_Handle_t GpioBtn;

	/* initialize structures */
	memset(&GpioLed,0,sizeof(GpioLed));
 80008ae:	f107 030c 	add.w	r3, r7, #12
 80008b2:	220c      	movs	r2, #12
 80008b4:	2100      	movs	r1, #0
 80008b6:	4618      	mov	r0, r3
 80008b8:	f000 f88b 	bl	80009d2 <memset>
	memset(&GpioBtn,0,sizeof(GpioBtn));
 80008bc:	463b      	mov	r3, r7
 80008be:	220c      	movs	r2, #12
 80008c0:	2100      	movs	r1, #0
 80008c2:	4618      	mov	r0, r3
 80008c4:	f000 f885 	bl	80009d2 <memset>

	/* led gpio configuration */
	GpioLed.pGPIOx = GPIOA;
 80008c8:	4b18      	ldr	r3, [pc, #96]	@ (800092c <main+0x84>)
 80008ca:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80008cc:	2305      	movs	r3, #5
 80008ce:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80008d0:	2301      	movs	r3, #1
 80008d2:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80008d4:	2302      	movs	r3, #2
 80008d6:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80008d8:	2300      	movs	r3, #0
 80008da:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80008dc:	2300      	movs	r3, #0
 80008de:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 80008e0:	2101      	movs	r1, #1
 80008e2:	4812      	ldr	r0, [pc, #72]	@ (800092c <main+0x84>)
 80008e4:	f7ff fc8e 	bl	8000204 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 80008e8:	f107 030c 	add.w	r3, r7, #12
 80008ec:	4618      	mov	r0, r3
 80008ee:	f7ff fd59 	bl	80003a4 <GPIO_Init>

	/* button gpio configuration */
	GpioBtn.pGPIOx = GPIOC;
 80008f2:	4b0f      	ldr	r3, [pc, #60]	@ (8000930 <main+0x88>)
 80008f4:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80008f6:	230d      	movs	r3, #13
 80008f8:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80008fa:	2304      	movs	r3, #4
 80008fc:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80008fe:	2302      	movs	r3, #2
 8000900:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD;
 8000902:	2302      	movs	r3, #2
 8000904:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000906:	2101      	movs	r1, #1
 8000908:	4809      	ldr	r0, [pc, #36]	@ (8000930 <main+0x88>)
 800090a:	f7ff fc7b 	bl	8000204 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 800090e:	463b      	mov	r3, r7
 8000910:	4618      	mov	r0, r3
 8000912:	f7ff fd47 	bl	80003a4 <GPIO_Init>

	/* IRQ configurations */
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRI15);
 8000916:	210f      	movs	r1, #15
 8000918:	2028      	movs	r0, #40	@ 0x28
 800091a:	f7ff ff7b 	bl	8000814 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 800091e:	2101      	movs	r1, #1
 8000920:	2028      	movs	r0, #40	@ 0x28
 8000922:	f7ff fef1 	bl	8000708 <GPIO_IRQInterruptConfig>

    /* Loop forever */
	while(1);
 8000926:	bf00      	nop
 8000928:	e7fd      	b.n	8000926 <main+0x7e>
 800092a:	bf00      	nop
 800092c:	40020000 	.word	0x40020000
 8000930:	40020800 	.word	0x40020800

08000934 <delay>:
	return 0;
}
/*************************************************************************************************************************************************/

void delay(void)
{
 8000934:	b480      	push	{r7}
 8000936:	b083      	sub	sp, #12
 8000938:	af00      	add	r7, sp, #0
	for(uint32_t count = 0 ; count < 500000/2; count++);
 800093a:	2300      	movs	r3, #0
 800093c:	607b      	str	r3, [r7, #4]
 800093e:	e002      	b.n	8000946 <delay+0x12>
 8000940:	687b      	ldr	r3, [r7, #4]
 8000942:	3301      	adds	r3, #1
 8000944:	607b      	str	r3, [r7, #4]
 8000946:	687b      	ldr	r3, [r7, #4]
 8000948:	4a04      	ldr	r2, [pc, #16]	@ (800095c <delay+0x28>)
 800094a:	4293      	cmp	r3, r2
 800094c:	d9f8      	bls.n	8000940 <delay+0xc>
}
 800094e:	bf00      	nop
 8000950:	bf00      	nop
 8000952:	370c      	adds	r7, #12
 8000954:	46bd      	mov	sp, r7
 8000956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800095a:	4770      	bx	lr
 800095c:	0003d08f 	.word	0x0003d08f

08000960 <EXTI15_10_IRQHandler>:

/*************************************************************************************************************************************************/

void EXTI15_10_IRQHandler(void)
{
 8000960:	b580      	push	{r7, lr}
 8000962:	af00      	add	r7, sp, #0
	delay();
 8000964:	f7ff ffe6 	bl	8000934 <delay>
	/* handle the interrupt */
	GPIO_IRQHandling(GPIO_PIN_NO_13);
 8000968:	200d      	movs	r0, #13
 800096a:	f7ff ff7d 	bl	8000868 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800096e:	2105      	movs	r1, #5
 8000970:	4802      	ldr	r0, [pc, #8]	@ (800097c <EXTI15_10_IRQHandler+0x1c>)
 8000972:	f7ff feb3 	bl	80006dc <GPIO_ToggleOutputPin>
}
 8000976:	bf00      	nop
 8000978:	bd80      	pop	{r7, pc}
 800097a:	bf00      	nop
 800097c:	40020000 	.word	0x40020000

08000980 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000980:	480d      	ldr	r0, [pc, #52]	@ (80009b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000982:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000984:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000988:	480c      	ldr	r0, [pc, #48]	@ (80009bc <LoopForever+0x6>)
  ldr r1, =_edata
 800098a:	490d      	ldr	r1, [pc, #52]	@ (80009c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800098c:	4a0d      	ldr	r2, [pc, #52]	@ (80009c4 <LoopForever+0xe>)
  movs r3, #0
 800098e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000990:	e002      	b.n	8000998 <LoopCopyDataInit>

08000992 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000992:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000994:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000996:	3304      	adds	r3, #4

08000998 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000998:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800099a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800099c:	d3f9      	bcc.n	8000992 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800099e:	4a0a      	ldr	r2, [pc, #40]	@ (80009c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009a0:	4c0a      	ldr	r4, [pc, #40]	@ (80009cc <LoopForever+0x16>)
  movs r3, #0
 80009a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009a4:	e001      	b.n	80009aa <LoopFillZerobss>

080009a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009a8:	3204      	adds	r2, #4

080009aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009ac:	d3fb      	bcc.n	80009a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009ae:	f000 f819 	bl	80009e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009b2:	f7ff ff79 	bl	80008a8 <main>

080009b6 <LoopForever>:

LoopForever:
  b LoopForever
 80009b6:	e7fe      	b.n	80009b6 <LoopForever>
  ldr   r0, =_estack
 80009b8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80009bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009c0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80009c4:	08000a4c 	.word	0x08000a4c
  ldr r2, =_sbss
 80009c8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80009cc:	2000001c 	.word	0x2000001c

080009d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009d0:	e7fe      	b.n	80009d0 <ADC_IRQHandler>

080009d2 <memset>:
 80009d2:	4402      	add	r2, r0
 80009d4:	4603      	mov	r3, r0
 80009d6:	4293      	cmp	r3, r2
 80009d8:	d100      	bne.n	80009dc <memset+0xa>
 80009da:	4770      	bx	lr
 80009dc:	f803 1b01 	strb.w	r1, [r3], #1
 80009e0:	e7f9      	b.n	80009d6 <memset+0x4>
	...

080009e4 <__libc_init_array>:
 80009e4:	b570      	push	{r4, r5, r6, lr}
 80009e6:	4d0d      	ldr	r5, [pc, #52]	@ (8000a1c <__libc_init_array+0x38>)
 80009e8:	4c0d      	ldr	r4, [pc, #52]	@ (8000a20 <__libc_init_array+0x3c>)
 80009ea:	1b64      	subs	r4, r4, r5
 80009ec:	10a4      	asrs	r4, r4, #2
 80009ee:	2600      	movs	r6, #0
 80009f0:	42a6      	cmp	r6, r4
 80009f2:	d109      	bne.n	8000a08 <__libc_init_array+0x24>
 80009f4:	4d0b      	ldr	r5, [pc, #44]	@ (8000a24 <__libc_init_array+0x40>)
 80009f6:	4c0c      	ldr	r4, [pc, #48]	@ (8000a28 <__libc_init_array+0x44>)
 80009f8:	f000 f818 	bl	8000a2c <_init>
 80009fc:	1b64      	subs	r4, r4, r5
 80009fe:	10a4      	asrs	r4, r4, #2
 8000a00:	2600      	movs	r6, #0
 8000a02:	42a6      	cmp	r6, r4
 8000a04:	d105      	bne.n	8000a12 <__libc_init_array+0x2e>
 8000a06:	bd70      	pop	{r4, r5, r6, pc}
 8000a08:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a0c:	4798      	blx	r3
 8000a0e:	3601      	adds	r6, #1
 8000a10:	e7ee      	b.n	80009f0 <__libc_init_array+0xc>
 8000a12:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a16:	4798      	blx	r3
 8000a18:	3601      	adds	r6, #1
 8000a1a:	e7f2      	b.n	8000a02 <__libc_init_array+0x1e>
 8000a1c:	08000a44 	.word	0x08000a44
 8000a20:	08000a44 	.word	0x08000a44
 8000a24:	08000a44 	.word	0x08000a44
 8000a28:	08000a48 	.word	0x08000a48

08000a2c <_init>:
 8000a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2e:	bf00      	nop
 8000a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a32:	bc08      	pop	{r3}
 8000a34:	469e      	mov	lr, r3
 8000a36:	4770      	bx	lr

08000a38 <_fini>:
 8000a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3a:	bf00      	nop
 8000a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a3e:	bc08      	pop	{r3}
 8000a40:	469e      	mov	lr, r3
 8000a42:	4770      	bx	lr
